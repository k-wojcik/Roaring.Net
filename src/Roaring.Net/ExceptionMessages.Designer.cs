//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Roaring.Net {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ExceptionMessages {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ExceptionMessages() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Roaring.Net.ExceptionMessages", typeof(ExceptionMessages).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot access a disposed, unallocated memory..
        /// </summary>
        internal static string BitmapMemoryDisposed {
            get {
                return ResourceManager.GetString("BitmapMemoryDisposed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The size of memory cannot be zero..
        /// </summary>
        internal static string BitmapMemorySizeEqualToZero {
            get {
                return ResourceManager.GetString("BitmapMemorySizeEqualToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passed context is belongs to another bitmap..
        /// </summary>
        internal static string BulkContextBelongsToOtherBitmap {
            get {
                return ResourceManager.GetString("BulkContextBelongsToOtherBitmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Deserialization failed for an unknown reason..
        /// </summary>
        internal static string DeserializationFailedUnknownReason {
            get {
                return ResourceManager.GetString("DeserializationFailedUnknownReason", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enumerator has been disposed..
        /// </summary>
        internal static string DisposedEnumerator {
            get {
                return ResourceManager.GetString("DisposedEnumerator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Offset with count cannot be greater than the number of values..
        /// </summary>
        internal static string OffsetWithCountGreaterThanNumberOfValues {
            get {
                return ResourceManager.GetString("OffsetWithCountGreaterThanNumberOfValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation is not supported..
        /// </summary>
        internal static string OperationNotSupported {
            get {
                return ResourceManager.GetString("OperationNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The start value cannot be greater than the end value..
        /// </summary>
        internal static string StartValueGreaterThenEndValue {
            get {
                return ResourceManager.GetString("StartValueGreaterThenEndValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The step cannot be equal to 0..
        /// </summary>
        internal static string StepEqualToZero {
            get {
                return ResourceManager.GetString("StepEqualToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to allocate bitmap..
        /// </summary>
        internal static string UnableToAllocateBitmap {
            get {
                return ResourceManager.GetString("UnableToAllocateBitmap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to allocate bitmap iterator..
        /// </summary>
        internal static string UnableToAllocateBitmapIterator {
            get {
                return ResourceManager.GetString("UnableToAllocateBitmapIterator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported serialization format..
        /// </summary>
        internal static string UnsupportedSerializationFormat {
            get {
                return ResourceManager.GetString("UnsupportedSerializationFormat", resourceCulture);
            }
        }
    }
}
